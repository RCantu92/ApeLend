{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertocantu/blockchain_programming/ApeLend/pages/index.js\";\nimport React, { Component } from 'react'; // import { apeLendInstance, provider, signer } from '../ethers/ApeLend.js';\n\nimport { ethers } from 'ethers';\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json';\nconst apeLendAddress = '0xe06f84adF394eD803813CC5f1e440AA00747562d';\nlet provider;\nlet signer;\n\nif (false && typeof window.ethereum !== 'undefined') {\n  console.log(\"Step One: MetaMask\");\n  ethereum.request({\n    method: 'eth_requestAccounts'\n  }); // THIS LINE SHOULD BE PROMPTED BY A USER'S ACTIOIN (IS LINE NEEDED?)\n  // A Web3Provider wraps a standard Web3 provider, which is\n  // what Metamask injects as window.ethereum into each page\n\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  signer = provider.getSigner();\n  console.log(`Step Two: Signer from MetaMask - ${signer.getAddress()}`);\n}\n\nconst apeLendInstance = new ethers.Contract(apeLendAddress, BorrowLendProtocol.abi, provider);\n\nclass apeLend extends Component {\n  async componentDidMount() {\n    const creatorAddress = await apeLendInstance.connect(signer).protocolCreator(); // THIS LINE IS BREAKING THINGS\n\n    console.log(creatorAddress);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"ApeLend home page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.creatorAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\nexport async function getStaticProps() {\n\n  console.log(\"Step Five: Made it to index.js\");\n\n  // const creatorAddress = \"5413\"; // TEST LINE TO CONFIRM IT CAN PRINT TO THE WEBPAGE\n\n  // await apeLendInstance.deployed();\n\n  const creatorAddress = await apeLendInstance.connect(signer).currentBlockTimestamp(); // THIS LINE IS BREAKING THINGS\n\n  return { \n    props: { \n      creatorAddress,\n    },\n  };\n\n}\n*/\n\n\nexport default apeLend;","map":{"version":3,"sources":["/Users/robertocantu/blockchain_programming/ApeLend/pages/index.js"],"names":["React","Component","ethers","BorrowLendProtocol","apeLendAddress","provider","signer","window","ethereum","console","log","request","method","providers","Web3Provider","getSigner","getAddress","apeLendInstance","Contract","abi","apeLend","componentDidMount","creatorAddress","connect","protocolCreator","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,kBAAP,MAA+B,uEAA/B;AAEA,MAAMC,cAAc,GAAG,4CAAvB;AACA,IAAIC,QAAJ;AACA,IAAIC,MAAJ;;AAEA,IAAI,SAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjB,EAF2E,CAEtB;AACrD;AACA;;AACAP,EAAAA,QAAQ,GAAG,IAAIH,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAX;AACAF,EAAAA,MAAM,GAAGD,QAAQ,CAACU,SAAT,EAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,oCAAmCJ,MAAM,CAACU,UAAP,EAAoB,EAApE;AACD;;AAED,MAAMC,eAAe,GAAG,IAAIf,MAAM,CAACgB,QAAX,CACtBd,cADsB,EAEtBD,kBAAkB,CAACgB,GAFG,EAGtBd,QAHsB,CAAxB;;AAMA,MAAMe,OAAN,SAAsBnB,SAAtB,CAAgC;AAE9B,QAAMoB,iBAAN,GAA0B;AAExB,UAAMC,cAAc,GAAG,MAAML,eAAe,CAACM,OAAhB,CAAwBjB,MAAxB,EAAgCkB,eAAhC,EAA7B,CAFwB,CAEwD;;AAEhFf,IAAAA,OAAO,CAACC,GAAR,CAAYY,cAAZ;AAED;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAM,KAAKC,KAAL,CAAWJ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAlB6B;AAqBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n// import { apeLendInstance, provider, signer } from '../ethers/ApeLend.js';\n\nimport { ethers } from 'ethers';\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json';\n\nconst apeLendAddress = '0xe06f84adF394eD803813CC5f1e440AA00747562d';\nlet provider;\nlet signer;\n\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n  console.log(\"Step One: MetaMask\");\n  ethereum.request({ method: 'eth_requestAccounts' }); // THIS LINE SHOULD BE PROMPTED BY A USER'S ACTIOIN (IS LINE NEEDED?)\n  // A Web3Provider wraps a standard Web3 provider, which is\n  // what Metamask injects as window.ethereum into each page\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  signer = provider.getSigner();\n  console.log(`Step Two: Signer from MetaMask - ${signer.getAddress()}`);\n}\n\nconst apeLendInstance = new ethers.Contract(\n  apeLendAddress,\n  BorrowLendProtocol.abi,\n  provider\n);\n\nclass apeLend extends Component {\n\n  async componentDidMount() {\n\n    const creatorAddress = await apeLendInstance.connect(signer).protocolCreator(); // THIS LINE IS BREAKING THINGS\n\n    console.log(creatorAddress);\n\n  }\n\n  render() {\n    return(\n      <div>\n        <div>ApeLend home page</div>\n        <div>{this.props.creatorAddress}</div>\n      </div>\n    )\n\n  }\n} \n\n/*\nexport async function getStaticProps() {\n\n  console.log(\"Step Five: Made it to index.js\");\n\n  // const creatorAddress = \"5413\"; // TEST LINE TO CONFIRM IT CAN PRINT TO THE WEBPAGE\n\n  // await apeLendInstance.deployed();\n\n  const creatorAddress = await apeLendInstance.connect(signer).currentBlockTimestamp(); // THIS LINE IS BREAKING THINGS\n\n  return { \n    props: { \n      creatorAddress,\n    },\n  };\n\n}\n*/\n\nexport default apeLend;"]},"metadata":{},"sourceType":"module"}