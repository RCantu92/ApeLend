{"ast":null,"code":"import { ethers } from 'ethers'; // Import instance of Ethers' provider\n// import provider from './ethers.js';\n// Import contract ABI\n\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json'; // Hardcode apeLend contract address\n// (FIND WAY TO PULL FROM JSON ABI?)\n\nconst apeLendAddress = '0x239eF3B9093fA5fF22a3856aa4bF75EB62072dfA'; // A Web3Provider wraps a standard Web3 provider, which is\n// what Metamask injects as window.ethereum into each page\n\nawait window.ethereum.enable();\nconst provider = new ethers.providers.Web3Provider(window.ethereum); // Instance of ApeLend\n\nconst apeLendInstance = new ethers.Contract(apeLendAddress, BorrowLendProtocol.abi, // NEED TO PARSE JSON?\nprovider); // Export instance of deployed ApeLend\n\nexport default apeLendInstance;","map":{"version":3,"sources":["/Users/robertocantu/blockchain_programming/ApeLend/ethers/ApeLend.js"],"names":["ethers","BorrowLendProtocol","apeLendAddress","window","ethereum","enable","provider","providers","Web3Provider","apeLendInstance","Contract","abi"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB,C,CACA;AACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,uEAA/B,C,CACA;AACA;;AACA,MAAMC,cAAc,GAAG,4CAAvB,C,CAEA;AACA;;AACA,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AACA,MAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCL,MAAM,CAACC,QAAzC,CAAjB,C,CAEA;;AACA,MAAMK,eAAe,GAAG,IAAIT,MAAM,CAACU,QAAX,CACpBR,cADoB,EAEpBD,kBAAkB,CAACU,GAFC,EAEI;AACxBL,QAHoB,CAAxB,C,CAMA;;AACA,eAAeG,eAAf","sourcesContent":["import { ethers } from 'ethers';\n// Import instance of Ethers' provider\n// import provider from './ethers.js';\n// Import contract ABI\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json';\n// Hardcode apeLend contract address\n// (FIND WAY TO PULL FROM JSON ABI?)\nconst apeLendAddress = '0x239eF3B9093fA5fF22a3856aa4bF75EB62072dfA';\n\n// A Web3Provider wraps a standard Web3 provider, which is\n// what Metamask injects as window.ethereum into each page\nawait window.ethereum.enable()\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// Instance of ApeLend\nconst apeLendInstance = new ethers.Contract(\n    apeLendAddress,\n    BorrowLendProtocol.abi, // NEED TO PARSE JSON?\n    provider\n);\n\n// Export instance of deployed ApeLend\nexport default apeLendInstance;"]},"metadata":{},"sourceType":"module"}