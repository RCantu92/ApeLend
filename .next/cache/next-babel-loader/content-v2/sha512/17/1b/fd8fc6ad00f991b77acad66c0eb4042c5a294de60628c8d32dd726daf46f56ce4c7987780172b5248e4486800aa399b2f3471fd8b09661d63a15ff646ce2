{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/robertocantu/blockchain_programming/ApeLend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/robertocantu/blockchain_programming/ApeLend/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; // import { apeLendInstance, provider, signer } from '../ethers/ApeLend.js';\n\nimport { ethers } from 'ethers';\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json';\nvar apeLendAddress = '0xe06f84adF394eD803813CC5f1e440AA00747562d';\nvar provider;\nvar signer;\n\nif (true && typeof window.ethereum !== 'undefined') {\n  console.log(\"Step One: MetaMask\");\n  ethereum.request({\n    method: 'eth_requestAccounts'\n  }); // THIS LINE SHOULD BE PROMPTED BY A USER'S ACTIOIN (IS LINE NEEDED?)\n  // A Web3Provider wraps a standard Web3 provider, which is\n  // what Metamask injects as window.ethereum into each page\n\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  signer = provider.getSigner();\n  console.log(\"Step Two: Signer from MetaMask - \".concat(signer.getAddress()));\n}\n\nvar apeLendInstance = new ethers.Contract(apeLendAddress, BorrowLendProtocol.abi, provider);\n\nvar apeLend = /*#__PURE__*/function (_Component) {\n  _inherits(apeLend, _Component);\n\n  var _super = _createSuper(apeLend);\n\n  function apeLend() {\n    var _this;\n\n    _classCallCheck(this, apeLend);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      creatorAddress: null\n    });\n\n    return _this;\n  }\n\n  _createClass(apeLend, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var creatorAddress;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return apeLendInstance.connect(signer).protocolCreator();\n\n              case 2:\n                creatorAddress = _context.sent;\n                // THIS LINE IS BREAKING THINGS\n                this.setState({\n                  creatorAddress: creatorAddress\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"ApeLend home page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.creatorAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return apeLend;\n}(Component);\n/*\nexport async function getStaticProps() {\n\n  console.log(\"Step Five: Made it to index.js\");\n\n  // const creatorAddress = \"5413\"; // TEST LINE TO CONFIRM IT CAN PRINT TO THE WEBPAGE\n\n  // await apeLendInstance.deployed();\n\n  const creatorAddress = await apeLendInstance.connect(signer).currentBlockTimestamp(); // THIS LINE IS BREAKING THINGS\n\n  return { \n    props: { \n      creatorAddress,\n    },\n  };\n\n}\n*/\n\n\nexport default apeLend;","map":{"version":3,"sources":["/Users/robertocantu/blockchain_programming/ApeLend/pages/index.js"],"names":["React","Component","ethers","BorrowLendProtocol","apeLendAddress","provider","signer","window","ethereum","console","log","request","method","providers","Web3Provider","getSigner","getAddress","apeLendInstance","Contract","abi","apeLend","creatorAddress","connect","protocolCreator","setState","state"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,kBAAP,MAA+B,uEAA/B;AAEA,IAAMC,cAAc,GAAG,4CAAvB;AACA,IAAIC,QAAJ;AACA,IAAIC,MAAJ;;AAEA,IAAI,QAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAjB,EAF2E,CAEtB;AACrD;AACA;;AACAP,EAAAA,QAAQ,GAAG,IAAIH,MAAM,CAACW,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAX;AACAF,EAAAA,MAAM,GAAGD,QAAQ,CAACU,SAAT,EAAT;AACAN,EAAAA,OAAO,CAACC,GAAR,4CAAgDJ,MAAM,CAACU,UAAP,EAAhD;AACD;;AAED,IAAMC,eAAe,GAAG,IAAIf,MAAM,CAACgB,QAAX,CACtBd,cADsB,EAEtBD,kBAAkB,CAACgB,GAFG,EAGtBd,QAHsB,CAAxB;;IAMMe,O;;;;;;;;;;;;;;;;4DAEI;AACNC,MAAAA,cAAc,EAAE;AADV,K;;;;;;;;;;;;;;;uBAMuBJ,eAAe,CAACK,OAAhB,CAAwBhB,MAAxB,EAAgCiB,eAAhC,E;;;AAAvBF,gBAAAA,c;AAA0E;AAEhF,qBAAKG,QAAL,CAAc;AACZH,kBAAAA,cAAc,EAAdA;AADY,iBAAd;;;;;;;;;;;;;;;;;;6BAMO;AACP,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAM,KAAKI,KAAL,CAAWJ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;;;EAxBmBpB,S;AA2BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAemB,OAAf","sourcesContent":["import React, { Component } from 'react';\n// import { apeLendInstance, provider, signer } from '../ethers/ApeLend.js';\n\nimport { ethers } from 'ethers';\nimport BorrowLendProtocol from '../artifacts/contracts/BorrowLendProtocol.sol/BorrowLendProtocol.json';\n\nconst apeLendAddress = '0xe06f84adF394eD803813CC5f1e440AA00747562d';\nlet provider;\nlet signer;\n\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n  console.log(\"Step One: MetaMask\");\n  ethereum.request({ method: 'eth_requestAccounts' }); // THIS LINE SHOULD BE PROMPTED BY A USER'S ACTIOIN (IS LINE NEEDED?)\n  // A Web3Provider wraps a standard Web3 provider, which is\n  // what Metamask injects as window.ethereum into each page\n  provider = new ethers.providers.Web3Provider(window.ethereum);\n  signer = provider.getSigner();\n  console.log(`Step Two: Signer from MetaMask - ${signer.getAddress()}`);\n}\n\nconst apeLendInstance = new ethers.Contract(\n  apeLendAddress,\n  BorrowLendProtocol.abi,\n  provider\n);\n\nclass apeLend extends Component {\n\n  state = {\n    creatorAddress: null\n  }\n\n  async componentDidMount() {\n\n    const creatorAddress = await apeLendInstance.connect(signer).protocolCreator(); // THIS LINE IS BREAKING THINGS\n\n    this.setState({\n      creatorAddress\n    });\n\n  }\n\n  render() {\n    return(\n      <div>\n        <div>ApeLend home page</div>\n        <div>{this.state.creatorAddress}</div>\n      </div>\n    )\n\n  }\n} \n\n/*\nexport async function getStaticProps() {\n\n  console.log(\"Step Five: Made it to index.js\");\n\n  // const creatorAddress = \"5413\"; // TEST LINE TO CONFIRM IT CAN PRINT TO THE WEBPAGE\n\n  // await apeLendInstance.deployed();\n\n  const creatorAddress = await apeLendInstance.connect(signer).currentBlockTimestamp(); // THIS LINE IS BREAKING THINGS\n\n  return { \n    props: { \n      creatorAddress,\n    },\n  };\n\n}\n*/\n\nexport default apeLend;"]},"metadata":{},"sourceType":"module"}