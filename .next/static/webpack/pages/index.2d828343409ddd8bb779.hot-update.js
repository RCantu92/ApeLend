webpackHotUpdate_N_E("pages/index",{

/***/ "./ethers/ethers.js":
/*!**************************!*\
  !*** ./ethers/ethers.js ***!
  \**************************/
/*! exports provided: provider, signer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"provider\", function() { return provider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signer\", function() { return signer; });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n// May need to use this syntax for frontend:\n\nconsole.log(\"Step Zero; Very Beginning\"); // Creating variable instance of\n// provider to give value based\n// if using MetaMask or not.\n\nvar provider;\nvar signer; // Conditional that uses the inject web3 from metamask\n// under certain conditions. Otherwise, it connects using\n// Alchemy.\n\nif ( true && typeof window.ethereum !== 'undefined') {\n  console.log(\"Step One: MetaMask\");\n  ethereum.request({\n    method: 'eth_requestAccounts'\n  }); // A Web3Provider wraps a standard Web3 provider, which is\n  // what Metamask injects as window.ethereum into each page\n\n  var _provider = new ethers__WEBPACK_IMPORTED_MODULE_0__[\"ethers\"].providers.Web3Provider(window.ethereum);\n\n  signer = _provider.getSigner();\n  console.log(\"Step Two: Signer from MetaMask - \".concat(signer));\n}\n/* else {\n   console.log(\"Step One: Alchemy\");\n   // FIX, RIGHT NOW WE *HAVE* TO USE METAMASK, OTHERWISE ERRORS OUT\n   // We are on the server *OR* the user is not running metamask\n   const network = \"ropsten\";\n   const provider = ethers.getDefaultProvider(network, { alchemy: `https://eth-ropsten.alchemyapi.io/v2/${process.env.ALCHEMY_ROPSTEN}` });\n   // const provider = new ethers.providers.AlchemyProvider(network, `https://eth-ropsten.alchemyapi.io/v2/${process.env.ALCHEMY_ROPSTEN}` );\n   // signer = provider.getSigner();\n   console.log(`Step Two: Provider from Alchemy - ${provider}`);\n}*/\n// Export instance of Ethers' provider\n\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZXRoZXJzL2V0aGVycy5qcz9hNmFkIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJwcm92aWRlciIsInNpZ25lciIsIndpbmRvdyIsImV0aGVyZXVtIiwicmVxdWVzdCIsIm1ldGhvZCIsImV0aGVycyIsInByb3ZpZGVycyIsIldlYjNQcm92aWRlciIsImdldFNpZ25lciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDJCQUFaLEUsQ0FFQTtBQUNBO0FBQ0E7O0FBQ0EsSUFBSUMsUUFBSjtBQUNBLElBQUlDLE1BQUosQyxDQUVBO0FBQ0E7QUFDQTs7QUFDQSxJQUFJLFNBQWlDLE9BQU9DLE1BQU0sQ0FBQ0MsUUFBZCxLQUEyQixXQUFoRSxFQUE2RTtBQUN6RUwsU0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDQUksVUFBUSxDQUFDQyxPQUFULENBQWlCO0FBQUVDLFVBQU0sRUFBRTtBQUFWLEdBQWpCLEVBRnlFLENBR3pFO0FBQ0E7O0FBQ0EsTUFBTUwsU0FBUSxHQUFHLElBQUlNLDZDQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFlBQXJCLENBQWtDTixNQUFNLENBQUNDLFFBQXpDLENBQWpCOztBQUNBRixRQUFNLEdBQUdELFNBQVEsQ0FBQ1MsU0FBVCxFQUFUO0FBQ0FYLFNBQU8sQ0FBQ0MsR0FBUiw0Q0FBZ0RFLE1BQWhEO0FBQ0g7QUFBQTtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFDQSIsImZpbGUiOiIuL2V0aGVycy9ldGhlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNYXkgbmVlZCB0byB1c2UgdGhpcyBzeW50YXggZm9yIGZyb250ZW5kOlxuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAnZXRoZXJzJztcblxuY29uc29sZS5sb2coXCJTdGVwIFplcm87IFZlcnkgQmVnaW5uaW5nXCIpXG5cbi8vIENyZWF0aW5nIHZhcmlhYmxlIGluc3RhbmNlIG9mXG4vLyBwcm92aWRlciB0byBnaXZlIHZhbHVlIGJhc2VkXG4vLyBpZiB1c2luZyBNZXRhTWFzayBvciBub3QuXG5sZXQgcHJvdmlkZXI7XG5sZXQgc2lnbmVyO1xuXG4vLyBDb25kaXRpb25hbCB0aGF0IHVzZXMgdGhlIGluamVjdCB3ZWIzIGZyb20gbWV0YW1hc2tcbi8vIHVuZGVyIGNlcnRhaW4gY29uZGl0aW9ucy4gT3RoZXJ3aXNlLCBpdCBjb25uZWN0cyB1c2luZ1xuLy8gQWxjaGVteS5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmV0aGVyZXVtICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnNvbGUubG9nKFwiU3RlcCBPbmU6IE1ldGFNYXNrXCIpO1xuICAgIGV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6ICdldGhfcmVxdWVzdEFjY291bnRzJyB9KTtcbiAgICAvLyBBIFdlYjNQcm92aWRlciB3cmFwcyBhIHN0YW5kYXJkIFdlYjMgcHJvdmlkZXIsIHdoaWNoIGlzXG4gICAgLy8gd2hhdCBNZXRhbWFzayBpbmplY3RzIGFzIHdpbmRvdy5ldGhlcmV1bSBpbnRvIGVhY2ggcGFnZVxuICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XG4gICAgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XG4gICAgY29uc29sZS5sb2coYFN0ZXAgVHdvOiBTaWduZXIgZnJvbSBNZXRhTWFzayAtICR7c2lnbmVyfWApO1xufS8qIGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKFwiU3RlcCBPbmU6IEFsY2hlbXlcIik7XG4gICAgLy8gRklYLCBSSUdIVCBOT1cgV0UgKkhBVkUqIFRPIFVTRSBNRVRBTUFTSywgT1RIRVJXSVNFIEVSUk9SUyBPVVRcbiAgICAvLyBXZSBhcmUgb24gdGhlIHNlcnZlciAqT1IqIHRoZSB1c2VyIGlzIG5vdCBydW5uaW5nIG1ldGFtYXNrXG4gICAgY29uc3QgbmV0d29yayA9IFwicm9wc3RlblwiO1xuICAgIGNvbnN0IHByb3ZpZGVyID0gZXRoZXJzLmdldERlZmF1bHRQcm92aWRlcihuZXR3b3JrLCB7IGFsY2hlbXk6IGBodHRwczovL2V0aC1yb3BzdGVuLmFsY2hlbXlhcGkuaW8vdjIvJHtwcm9jZXNzLmVudi5BTENIRU1ZX1JPUFNURU59YCB9KTtcbiAgICAvLyBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLkFsY2hlbXlQcm92aWRlcihuZXR3b3JrLCBgaHR0cHM6Ly9ldGgtcm9wc3Rlbi5hbGNoZW15YXBpLmlvL3YyLyR7cHJvY2Vzcy5lbnYuQUxDSEVNWV9ST1BTVEVOfWAgKTtcbiAgICAvLyBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTtcbiAgICBjb25zb2xlLmxvZyhgU3RlcCBUd286IFByb3ZpZGVyIGZyb20gQWxjaGVteSAtICR7cHJvdmlkZXJ9YCk7XG59Ki9cblxuLy8gRXhwb3J0IGluc3RhbmNlIG9mIEV0aGVycycgcHJvdmlkZXJcbmV4cG9ydCB7IHByb3ZpZGVyLCBzaWduZXIgfSA7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ethers/ethers.js\n");

/***/ })

})