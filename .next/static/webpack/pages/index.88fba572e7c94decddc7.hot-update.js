webpackHotUpdate_N_E("pages/index",{

/***/ "./ethers/ethers.js":
/*!**************************!*\
  !*** ./ethers/ethers.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n// May need to use this syntax for frontend:\n // A Web3Provider wraps a standard Web3 provider, which is\n// what Metamask injects as window.ethereum into each page\n\nvar provider = new ethers__WEBPACK_IMPORTED_MODULE_0__[\"ethers\"].providers.Web3Provider(window.ethereum);\nvar signer = provider.getSigner();\n/*\nlet signer;\n\n// Conditional that uses the inject web3 from metamask\n// under certain conditions. Otherwise, it connects using\n// Alchemy.\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // A Web3Provider wraps a standard Web3 provider, which is\n    // what Metamask injects as window.ethereum into each page\n    // await window.ethereum.enable();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    signer = provider.getSigner();\n} else {\n    // We are on the server *OR* the user is not running metamask\n    // const network = \"ropsten\";\n    //const provider = ethers.getDefaultProvider(network, { alchemy: process.env.ALCHEMY_ROPSTEN });\n    const provider = new ethers.providers.JsonRpcProvider(`https://eth-ropsten.alchemyapi.io/v2/${process.env.ALCHEMY_ROPSTEN}`);\n    signer = provider.getSigner();\n}\n*/\n// For Infura API (Use conditional in future, in case user does not have MetaMask)\n// (THIS IS FROM EATTHEBLOCKS)\n// const provider = new ethers.providers.AlchemyProvider('testnet name', INFURA_TESTNET_API_KEY);\n// Export instance of Ethers' provider\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (signer);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZXRoZXJzL2V0aGVycy5qcz9hNmFkIl0sIm5hbWVzIjpbInByb3ZpZGVyIiwiZXRoZXJzIiwicHJvdmlkZXJzIiwiV2ViM1Byb3ZpZGVyIiwid2luZG93IiwiZXRoZXJldW0iLCJzaWduZXIiLCJnZXRTaWduZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtDQUdBO0FBQ0E7O0FBQ0EsSUFBTUEsUUFBUSxHQUFHLElBQUlDLDZDQUFNLENBQUNDLFNBQVAsQ0FBaUJDLFlBQXJCLENBQWtDQyxNQUFNLENBQUNDLFFBQXpDLENBQWpCO0FBQ0EsSUFBTUMsTUFBTSxHQUFHTixRQUFRLENBQUNPLFNBQVQsRUFBZjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFSTtBQUNBO0FBQ0E7QUFFSjs7QUFDZUQscUVBQWYiLCJmaWxlIjoiLi9ldGhlcnMvZXRoZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTWF5IG5lZWQgdG8gdXNlIHRoaXMgc3ludGF4IGZvciBmcm9udGVuZDpcbmltcG9ydCB7IGV0aGVycyB9IGZyb20gJ2V0aGVycyc7XG5cbi8vIEEgV2ViM1Byb3ZpZGVyIHdyYXBzIGEgc3RhbmRhcmQgV2ViMyBwcm92aWRlciwgd2hpY2ggaXNcbi8vIHdoYXQgTWV0YW1hc2sgaW5qZWN0cyBhcyB3aW5kb3cuZXRoZXJldW0gaW50byBlYWNoIHBhZ2VcbmNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XG5jb25zdCBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoKTtcblxuLypcbmxldCBzaWduZXI7XG5cbi8vIENvbmRpdGlvbmFsIHRoYXQgdXNlcyB0aGUgaW5qZWN0IHdlYjMgZnJvbSBtZXRhbWFza1xuLy8gdW5kZXIgY2VydGFpbiBjb25kaXRpb25zLiBPdGhlcndpc2UsIGl0IGNvbm5lY3RzIHVzaW5nXG4vLyBBbGNoZW15LlxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cud2ViMyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBBIFdlYjNQcm92aWRlciB3cmFwcyBhIHN0YW5kYXJkIFdlYjMgcHJvdmlkZXIsIHdoaWNoIGlzXG4gICAgLy8gd2hhdCBNZXRhbWFzayBpbmplY3RzIGFzIHdpbmRvdy5ldGhlcmV1bSBpbnRvIGVhY2ggcGFnZVxuICAgIC8vIGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5lbmFibGUoKTtcbiAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih3aW5kb3cuZXRoZXJldW0pO1xuICAgIHNpZ25lciA9IHByb3ZpZGVyLmdldFNpZ25lcigpO1xufSBlbHNlIHtcbiAgICAvLyBXZSBhcmUgb24gdGhlIHNlcnZlciAqT1IqIHRoZSB1c2VyIGlzIG5vdCBydW5uaW5nIG1ldGFtYXNrXG4gICAgLy8gY29uc3QgbmV0d29yayA9IFwicm9wc3RlblwiO1xuICAgIC8vY29uc3QgcHJvdmlkZXIgPSBldGhlcnMuZ2V0RGVmYXVsdFByb3ZpZGVyKG5ldHdvcmssIHsgYWxjaGVteTogcHJvY2Vzcy5lbnYuQUxDSEVNWV9ST1BTVEVOIH0pO1xuICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuSnNvblJwY1Byb3ZpZGVyKGBodHRwczovL2V0aC1yb3BzdGVuLmFsY2hlbXlhcGkuaW8vdjIvJHtwcm9jZXNzLmVudi5BTENIRU1ZX1JPUFNURU59YCk7XG4gICAgc2lnbmVyID0gcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XG59XG4qL1xuXG4gICAgLy8gRm9yIEluZnVyYSBBUEkgKFVzZSBjb25kaXRpb25hbCBpbiBmdXR1cmUsIGluIGNhc2UgdXNlciBkb2VzIG5vdCBoYXZlIE1ldGFNYXNrKVxuICAgIC8vIChUSElTIElTIEZST00gRUFUVEhFQkxPQ0tTKVxuICAgIC8vIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuQWxjaGVteVByb3ZpZGVyKCd0ZXN0bmV0IG5hbWUnLCBJTkZVUkFfVEVTVE5FVF9BUElfS0VZKTtcblxuLy8gRXhwb3J0IGluc3RhbmNlIG9mIEV0aGVycycgcHJvdmlkZXJcbmV4cG9ydCBkZWZhdWx0IHNpZ25lcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ethers/ethers.js\n");

/***/ })

})